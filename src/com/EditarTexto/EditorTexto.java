/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.EditarTexto;



import java.awt.Color;

import java.awt.Color;

import java.awt.Color;
import java.awt.FlowLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author 2dam
 */
public class EditorTexto extends javax.swing.JFrame {

    /**
     * Creates new form EditorTexto
     */
    public EditorTexto() {
        initComponents();
    }
    public void panelGuardar(){
           Object[] options = {"Si",
                    "No",
                    "Cancelar"
   };
    int n = JOptionPane.showOptionDialog( Nuevo,
    "¿Desea guardar el archivo?"
    + "",
    "",
    JOptionPane.YES_NO_CANCEL_OPTION,
    JOptionPane.QUESTION_MESSAGE,
    null,
    options,
    options[0]);
  
    if (n == JOptionPane.YES_OPTION){
        JFileChooser jf= new JFileChooser();
         FileFilter filter = new FileNameExtensionFilter("TXT file", "TXT");
        jf.setFileFilter(filter);
        jf.showSaveDialog(AreaTexto);
    }else if(n == JOptionPane.NO_OPTION){
        AreaTexto.setText(" ");
    }else if(n == JOptionPane.CANCEL_OPTION){
        
    }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();
        jScrollPane2 = new javax.swing.JScrollPane();
        AreaTexto = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        Archivo = new javax.swing.JMenu();
        Nuevo = new javax.swing.JMenuItem();
        Abrir = new javax.swing.JMenuItem();
        Guardar = new javax.swing.JMenuItem();
        Cerrar = new javax.swing.JMenuItem();
        ColorLetra = new javax.swing.JMenu();
        TextoColorRojo = new javax.swing.JMenuItem();
        TextoColorVerde = new javax.swing.JMenuItem();
        TextoColorAmarillo = new javax.swing.JMenuItem();
        Formato = new javax.swing.JMenu();
        Fuente = new javax.swing.JMenuItem();

        jMenu1.setText("File");
        jMenuBar2.add(jMenu1);

        jMenu3.setText("Edit");
        jMenuBar2.add(jMenu3);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        AreaTexto.setColumns(20);
        AreaTexto.setRows(5);
        jScrollPane2.setViewportView(AreaTexto);

        Archivo.setText("Archivo");

        Nuevo.setText("Nuevo");
        Nuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NuevoActionPerformed(evt);
            }
        });
        Archivo.add(Nuevo);

        Abrir.setText("Abrir");
        Abrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AbrirActionPerformed(evt);
            }
        });
        Archivo.add(Abrir);

        Guardar.setText("Guardar");
        Guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GuardarActionPerformed(evt);
            }
        });
        Archivo.add(Guardar);

        Cerrar.setText("Cerrar");
        Cerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CerrarActionPerformed(evt);
            }
        });
        Archivo.add(Cerrar);

        jMenuBar1.add(Archivo);

        ColorLetra.setText("Color");

        TextoColorRojo.setText("ColorRojo");
        TextoColorRojo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextoColorRojoActionPerformed(evt);
            }
        });
        ColorLetra.add(TextoColorRojo);

        TextoColorVerde.setText("ColorVerde");
        TextoColorVerde.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextoColorVerdeActionPerformed(evt);
            }
        });
        ColorLetra.add(TextoColorVerde);

        TextoColorAmarillo.setText("ColorAmarillo");
        TextoColorAmarillo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextoColorAmarilloActionPerformed(evt);
            }
        });
        ColorLetra.add(TextoColorAmarillo);

        jMenuBar1.add(ColorLetra);

        Formato.setText("Formato");

        Fuente.setText("Fuente");
        Fuente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FuenteActionPerformed(evt);
            }
        });
        Formato.add(Fuente);

        jMenuBar1.add(Formato);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TextoColorRojoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextoColorRojoActionPerformed
         AreaTexto.setForeground(Color.red);
    }//GEN-LAST:event_TextoColorRojoActionPerformed

    private void TextoColorVerdeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextoColorVerdeActionPerformed
        AreaTexto.setForeground(Color.green);
    }//GEN-LAST:event_TextoColorVerdeActionPerformed

    private void TextoColorAmarilloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextoColorAmarilloActionPerformed
       AreaTexto.setForeground(Color.yellow);
    }//GEN-LAST:event_TextoColorAmarilloActionPerformed

    private void NuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NuevoActionPerformed

         Object[] options = {"Si",
                    "No",
                    "Cancelar"
   };
    int n = JOptionPane.showOptionDialog( Nuevo,
    "¿Desea guardar el archivo?"
    + "",
    "",
    JOptionPane.YES_NO_CANCEL_OPTION,
    JOptionPane.QUESTION_MESSAGE,
    null,
    options,
    options[0]);
  
    if (n == JOptionPane.YES_OPTION){
        JFileChooser jf= new JFileChooser();
         FileFilter filter = new FileNameExtensionFilter("TXT file", "TXT");
        jf.setFileFilter(filter);
        jf.showSaveDialog(AreaTexto);
    }else if(n == JOptionPane.NO_OPTION){
        AreaTexto.setText(" ");
    }else if(n == JOptionPane.CANCEL_OPTION){
        
    }
    }//GEN-LAST:event_NuevoActionPerformed

    private void FuenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FuenteActionPerformed
        JFrame frame = new JFrame("Fuente2");
        frame.setContentPane(new Fuente2());
        frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        frame.pack();
        frame.setVisible(true);
    
    }//GEN-LAST:event_FuenteActionPerformed

    private void CerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CerrarActionPerformed
                 Object[] options = {"Si",
                    "No",
                    "Cancelar"
   };
    int n = JOptionPane.showOptionDialog( Nuevo,
    "¿Desea guardar el archivo?"
    + "",
    "",
    JOptionPane.YES_NO_CANCEL_OPTION,
    JOptionPane.QUESTION_MESSAGE,
    null,
    options,
    options[0]);
  
    if (n == JOptionPane.YES_OPTION){
        JFileChooser jf= new JFileChooser();
         FileFilter filter = new FileNameExtensionFilter("TXT file", "TXT");
        jf.setFileFilter(filter);
        jf.showSaveDialog(AreaTexto);
    }else if(n == JOptionPane.NO_OPTION){
        AreaTexto.setText(" ");
    }else if(n == JOptionPane.CANCEL_OPTION){
    }
        System.exit(0);
    }//GEN-LAST:event_CerrarActionPerformed

    private void GuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GuardarActionPerformed
        JFileChooser jf= new JFileChooser();
         FileFilter filter = new FileNameExtensionFilter("TXT file", "TXT");
        jf.setFileFilter(filter);
        jf.showSaveDialog(AreaTexto);
    }//GEN-LAST:event_GuardarActionPerformed

    private void AbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AbrirActionPerformed
        
        if(AreaTexto.getText().length()==0){//si no hay texto
            JFileChooser jf= new JFileChooser();
            FileFilter filter = new FileNameExtensionFilter("TXT file", "TXT");
            jf.setFileFilter(filter);
            jf.showOpenDialog(AreaTexto);
        }else{
            Object[] options = {"Si",
                "No",
                "Cancelar"
            };
            int n = JOptionPane.showOptionDialog( Nuevo,
             "¿Desea guardar el archivo?"
             + "",
             "",
    JOptionPane.YES_NO_CANCEL_OPTION,
    JOptionPane.QUESTION_MESSAGE,
    null,
    options,
    options[0]);
  
    if (n == JOptionPane.YES_OPTION){
        JFileChooser jf= new JFileChooser();
         FileFilter filter = new FileNameExtensionFilter("TXT file", "TXT");
        jf.setFileFilter(filter);
        jf.showSaveDialog(AreaTexto);
    }else if(n == JOptionPane.NO_OPTION){
        AreaTexto.setText(" ");
        JFileChooser jf= new JFileChooser();
            FileFilter filter = new FileNameExtensionFilter("TXT file", "TXT");
            jf.setFileFilter(filter);
            jf.showOpenDialog(AreaTexto);
    }else if(n == JOptionPane.CANCEL_OPTION){
        
    }
              
           
     
            
        }
        
    }//GEN-LAST:event_AbrirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditorTexto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditorTexto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditorTexto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditorTexto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EditorTexto().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem Abrir;
    private javax.swing.JMenu Archivo;
    public static javax.swing.JTextArea AreaTexto;
    private javax.swing.JMenuItem Cerrar;
    private javax.swing.JMenu ColorLetra;
    private javax.swing.JMenu Formato;
    private javax.swing.JMenuItem Fuente;
    private javax.swing.JMenuItem Guardar;
    private javax.swing.JMenuItem Nuevo;
    private javax.swing.JMenuItem TextoColorAmarillo;
    private javax.swing.JMenuItem TextoColorRojo;
    private javax.swing.JMenuItem TextoColorVerde;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuBar jMenuBar2;
    public static javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
